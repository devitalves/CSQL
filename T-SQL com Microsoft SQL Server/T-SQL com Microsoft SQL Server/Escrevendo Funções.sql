/** Funções Definidas pelo Usuario **/

SELECT SUM(QUANTIDADE * [PREÇO]) FROM [ITENS NOTAS FISCAIS]
WHERE NUMERO = 100

CREATE FUNCTION FaturamentoNota (@NUMERO AS INT) RETURNS FLOAT
AS
BEGIN
  DECLARE @FATURAMENTO FLOAT
  SELECT @FATURAMENTO = SUM(QUANTIDADE * [PREÇO]) FROM [ITENS NOTAS FISCAIS]
  WHERE NUMERO = @NUMERO
  RETURN @FATURAMENTO
END


SELECT NUMERO, [dbo].[FaturamentoNota](NUMERO) AS FATURAMENTO 
FROM [NOTAS FISCAIS]

CREATE FUNCTION NUMERONOTAS (@DATA DATE) RETURNS INT
AS
BEGIN
DECLARE @NUMNOTAS INT
SELECT @NUMNOTAS = COUNT(*) FROM [NOTAS FISCAIS] 
    WHERE DATA = @DATA
RETURN @NUMNOTAS
END

SELECT [dbo].[NUMERONOTAS]('20170202')


/** Funções dentro de um loop **/

DECLARE @LIMITE_MINIMO INT, @LIMITE_MAXIMO INT, @CONTADOR_NOTAS INT
DECLARE @TABELA_NUMEROS TABLE ([NUMERO] INT, [STATUS] VARCHAR(200), [FATURAMENTO] FLOAT)

SET @LIMITE_MINIMO = 98
SET @LIMITE_MAXIMO = 102

SET NOCOUNT ON
WHILE @LIMITE_MINIMO <= @LIMITE_MAXIMO
BEGIN
   SELECT @CONTADOR_NOTAS = COUNT(*) FROM [NOTAS FISCAIS] WHERE [NUMERO] = @LIMITE_MINIMO
   IF @CONTADOR_NOTAS > 0 
       BEGIN
          INSERT INTO @TABELA_NUMEROS ([NUMERO], [STATUS], [FATURAMENTO]) 
		  VALUES (@LIMITE_MINIMO, 'É nota fiscal', [dbo].[FaturamentoNota](@LIMITE_MINIMO))
	    END
   ELSE
       BEGIN
          INSERT INTO @TABELA_NUMEROS ([NUMERO], [STATUS], [FATURAMENTO]) 
		  VALUES (@LIMITE_MINIMO, 'Não é nota fiscal', 0)
	    END
   SET @LIMITE_MINIMO = @LIMITE_MINIMO + 1   
END

SELECT * FROM @TABELA_NUMEROS


IF OBJECT_ID('TABELANOTAS','U') IS NOT NULL
DROP TABLE TABELANOTAS
CREATE TABLE TABELANOTAS (DATA DATE, NUMNOTAS INT)
DECLARE @DATAINICIAL DATE
DECLARE @DATAFINAL DATE
SET @DATAINICIAL = '20170101'
SET @DATAFINAL = '20170110'
WHILE @DATAINICIAL <= @DATAFINAL
BEGIN
   INSERT INTO TABELANOTAS (DATA, NUMNOTAS) 
    VALUES (@DATAINICIAL, [dbo].[NUMERONOTAS](@DATAINICIAL))
   SELECT @DATAINICIAL = DATEADD(DAY, 1, @DATAINICIAL)
END

SELECT * FROM TABELANOTAS


/** Usando funções como tabelas **/

SELECT * FROM [TABELA DE CLIENTES]

SELECT * FROM [NOTAS FISCAIS] WHERE CPF = '1471156710'

CREATE FUNCTION ListaNotasCliente (@CPF AS VARCHAR(12)) RETURNS TABLE
AS
RETURN SELECT * FROM [NOTAS FISCAIS] WHERE CPF = @CPF

SELECT * FROM [dbo].[ListaNotasCliente]('1471156710')

SELECT COUNT(*) FROM [dbo].[ListaNotasCliente]('1471156710')

SELECT A.CPF, A.NUM_NOTA, B.TOTAL_FATURAMENTO
FROM
(SELECT CPF, (SELECT COUNT(*) FROM [dbo].[ListaNotasCliente](CPF)) AS NUM_NOTA
FROM [TABELA DE CLIENTES]) A
INNER JOIN
(SELECT CPF, SUM([dbo].[FaturamentoNota](NUMERO)) AS TOTAL_FATURAMENTO
FROM [NOTAS FISCAIS] GROUP BY CPF) B
ON A.CPF = B.CPF

CREATE FUNCTION FuncTabelaNotas (
    @DATAINICIAL AS DATE, 
    @DATAFINAL AS DATE
) RETURNS TABLE
RETURN SELECT DISTINCT DATA, [dbo].[NUMERONOTAS](DATA) AS NUMERO 
    FROM [NOTAS FISCAIS] WHERE DATA >= @DATAINICIAL 
        AND DATA <= @DATAFINAL 

SELECT * FROM [dbo].[FuncTabelaNotas]('20170101','20170110')
