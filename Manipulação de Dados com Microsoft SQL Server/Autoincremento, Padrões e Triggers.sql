
/** Campos Alto-Incremento **/


CREATE TABLE TAB_IDENTITY 
( ID INT IDENTITY (1,1) NOT NULL,
DESCRITOR VARCHAR(20) NULL)

INSERT INTO TAB_IDENTITY (DESCRITOR) VALUES ('CLIENTE X')
INSERT INTO TAB_IDENTITY (DESCRITOR) VALUES ('CLIENTE Y')
INSERT INTO TAB_IDENTITY (DESCRITOR) VALUES ('CLIENTE Z')
INSERT INTO TAB_IDENTITY (DESCRITOR) VALUES ('CLIENTE W')
INSERT INTO TAB_IDENTITY (DESCRITOR) VALUES ('CLIENTE A')

SELECT * FROM TAB_IDENTITY

DELETE FROM TAB_IDENTITY WHERE ID = 1

DROP TABLE TAB_IDENTITY

CREATE TABLE TAB_IDENTITY 
( ID INT IDENTITY (100,5) NOT NULL,
DESCRITOR VARCHAR(20) NULL)


/** Definindo padroões para campos **/

CREATE TABLE TAB_PADRAO
(ID INT IDENTITY (1,1) NOT NULL,
DESCRITOR VARCHAR(20) NULL,
ENDERECO VARCHAR(200) NULL,
CIDADE VARCHAR(50) DEFAULT 'Cidade não definida',
DATA_CRIACAO DATE DEFAULT GETDATE())

INSERT INTO TAB_PADRAO (DESCRITOR, ENDERECO, CIDADE, DATA_CRIACAO) VALUES ('CLIENTE X', 'RUA PROJETADA A', 'SÃO PAULO', '2018-04-30')

SELECT * FROM TAB_PADRAO

INSERT INTO TAB_PADRAO (DESCRITOR) VALUES ('CLIENTE X')



/** Exemplo de Triggers **/


CREATE TABLE TAB_FATURAMENTO
(DATA_VENDA DATE NULL,
TOTAL_VENDA FLOAT)

CREATE TRIGGER TG_ITENS_VENDIDOS
ON [ITENS VENDIDOS]
AFTER INSERT, UPDATE, DELETE
AS
BEGIN

DELETE FROM TAB_FATURAMENTO;

INSERT INTO TAB_FATURAMENTO (DATA_VENDA, TOTAL_VENDA)
SELECT A.DATA AS DATA_VENDA, SUM(B.QUANTIDADE * B.[PREÇO]) AS TOTAL_VENDA
FROM NOTAS A INNER JOIN [ITENS VENDIDOS] B
ON A.NÚMERO = B.NÚMERO
GROUP BY A.DATA;

END;

INSERT INTO [NOTAS] ([NÚMERO], DATA, CPF, MATRICULA, IMPOSTO)
VALUES ('0100', '2018-05-15', '1471156710', '235', 0.18)

INSERT INTO [ITENS VENDIDOS] ([NÚMERO],[CÓDIGO],[QUANTIDADE],[PREÇO])
VALUES ('0100', '1000889', 100, 1)
INSERT INTO [ITENS VENDIDOS] ([NÚMERO],[CÓDIGO],[QUANTIDADE],[PREÇO])
VALUES ('0100', '1002334', 100, 1)


SELECT * FROM TAB_FATURAMENTO

INSERT INTO [NOTAS] ([NÚMERO], DATA, CPF, MATRICULA, IMPOSTO)
VALUES ('0101', '2018-05-15', '1471156710', '235', 0.18)

INSERT INTO [ITENS VENDIDOS] ([NÚMERO],[CÓDIGO],[QUANTIDADE],[PREÇO])
VALUES ('0101', '1000889', 100, 1)
INSERT INTO [ITENS VENDIDOS] ([NÚMERO],[CÓDIGO],[QUANTIDADE],[PREÇO])
VALUES ('0101', '1002334', 100, 1)

INSERT INTO [NOTAS] ([NÚMERO], DATA, CPF, MATRICULA, IMPOSTO)
VALUES ('0102', '2018-05-16', '1471156710', '235', 0.18)

INSERT INTO [ITENS VENDIDOS] ([NÚMERO],[CÓDIGO],[QUANTIDADE],[PREÇO])
VALUES ('0102', '1000889', 100, 1.5)
INSERT INTO [ITENS VENDIDOS] ([NÚMERO],[CÓDIGO],[QUANTIDADE],[PREÇO])
VALUES ('0102', '1002334', 200, 1)

DELETE FROM [ITENS VENDIDOS] WHERE [NÚMERO] = '0102' AND [CÓDIGO] = '1002334'

UPDATE [ITENS VENDIDOS] SET [QUANTIDADE] = 300 WHERE [NÚMERO] = '0102' AND [CÓDIGO] = '1000889'

CREATE TRIGGER TG_CLIENTES_IDADE
ON [CLIENTES]
AFTER INSERT, UPDATE, DELETE
AS
BEGIN
UPDATE [CLIENTES] SET [IDADE] = 
    DATEDIFF(YEAR, [DATA NASCIMENTO], GETDATE());
END;


/** Usando Checks **/


CREATE TABLE TAB_CHECK
(ID INT NOT NULL,
NOME VARCHAR(20) NULL,
IDADE INT NULL,
CIDADE VARCHAR(20) NULL,
CONSTRAINT CHK_PESSOA CHECK (IDADE >= 18))

INSERT INTO TAB_CHECK (ID, NOME, IDADE, CIDADE) VALUES (1,'JOÃO', 19, 'RIO DE JANEIRO')

INSERT INTO TAB_CHECK (ID, NOME, IDADE, CIDADE) VALUES (2,'PEDRO', 20, 'SÃO PAULO')

CREATE TABLE TAB_CHECK2
(ID INT NOT NULL,
NOME VARCHAR(20) NULL,
IDADE INT NULL,
CIDADE VARCHAR(20) NULL,
CONSTRAINT CHK_PESSOA2 CHECK (IDADE >= 18 AND CIDADE = 'RIO DE JANEIRO'))

INSERT INTO TAB_CHECK2 (ID, NOME, IDADE, CIDADE) VALUES (1,'JOÃO', 19, 'RIO DE JANEIRO')

INSERT INTO TAB_CHECK2 (ID, NOME, IDADE, CIDADE) VALUES (2,'PEDRO', 20, 'RIO DE JANEIRO')

UPDATE TAB_CHECK2 SET CIDADE = 'SÃO PAULO' WHERE ID = 2



